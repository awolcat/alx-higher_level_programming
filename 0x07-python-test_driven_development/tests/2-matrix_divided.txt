Using the matrix_divided function:
==================================


matrix_divided(matrix, div)
---------------------------


First import the function

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

matrix must be a list of lists of integers or floats

	>>> matrix = [1, 2, 3, 4]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[1, 2, 3, 4], [5, 6, '7', 8]]
	>>> matrix_divided(matrix, 3) # doctest: +ELLIPSIS
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Each row of the matrix should be the same size

	>>> matrix = [[2, 4, 6, 8], [10, 12, 14]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size

The divisor div must be an integer or float

	>>> matrix = [[1, 2, 3, 4], [5, 6, 7, 8]]
	>>> matrix_divided(matrix, '2')
	Traceback (most recent call last):
		...
	TypeError: div must be a number

The divisor div cannot be zero

	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

All results will be rounded to 2 decimal places

	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0, 1.33], [1.67, 2.0, 2.33, 2.67]]


Return: The function returns a new list and the original list is not modified

	>>> matrix = [[2, 4, 6, 8], [10, 12, 14, 16]]

	>>> print(matrix_divided(matrix, 2))	
	[[1.0, 2.0, 3.0, 4.0], [5.0, 6.0, 7.0, 8.0]]

	>>> print(matrix)
	[[2, 4, 6, 8], [10, 12, 14, 16]]

